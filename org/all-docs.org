#+hugo_base_dir: ../
#+hugo_section: snippets

#+seq_todo: TODO DRAFT DONE
#+property: header-args :eval never-export
#+startup: indent

# https://scripter.co/latex-in-html/
#+macro: latex @@html:<span class="latex">L<sup>a</sup>T<sub>e</sub>X</span>@@
#+macro: youtube @@html:<div class="org-youtube"><iframe src="https://www.youtube-nocookie.com/embed/$1" allowfullscreen title="YouTube Video"></iframe></div>@@

#+author: Marco Ribeiro

* Bash Snippets
:PROPERTIES:
:EXPORT_FILE_NAME: bash-script-snippets
:EXPORT_DATE: 2022-10-06
:EXPORT_HUGO_BLACKFRIDAY: :extensions hardLineBreak
:EXPORT_TITLE: Bash Script Snippets
:END:


** Cut string
#+begin_src bash
my_filename="interesting-text-file.txt"
echo ${my_filename:0:21}

echo ${my_filename%.*}

complicated_filename="hello-world.tar.gz"
echo ${complicated_filename%%.*}

echo ${my_filename/.*/}

sed 's/[.].*//' <<< 'hello-world.tar.gz'

cut -f1 -d"." <<< 'hello-world.tar.gz'
#+end_src

#+RESULTS:
| interesting-text-file |
| interesting-text-file |
| hello-world           |
| interesting-text-file |
| hello-world           |
| hello-world           |

** ~/execute_string.sh

#+begin_src bash

your_command_string="..."
output=$(eval "$your_command_string")
echo "$output"

#+end_src

** ~/random.sh

#+begin_src bash
echo $(( $RANDOM % 50 + 1 ))

numero=${RANDOM:0:2}

#+end_src

** ~/return_values.sh

#+begin_src bash

my_function () {
  func_result="some result"
}

my_function
echo $func_result

#+end_src

** ~/return_values.sh

#+begin_src bash

my_function () {
  local func_result="some result"
  echo "$func_result"
}

func_result="$(my_function)"
echo $func_result
#+end_src

** ~/passing_arguments.sh

#+begin_src bash

greeting () {
  echo "Hello $1"
}

greeting "Joe"

#+end_src

** if, elif, else:

#+begin_src bash

echo -n "Enter a number: "
read VAR

if [[ $VAR -gt 10 ]]
then
  echo "The variable is greater than 10."
elif [[ $VAR -eq 10 ]]
then
  echo "The variable is equal to 10."
else
  echo "The variable is less than 10."
fi

#+end_src

** Multiple conditions
#+begin_src bash
if [[ $VAR1 -ge $VAR2 ]] && [[ $VAR1 -ge $VAR3 ]]
then
  echo "$VAR1 is the largest number."
elif [[ $VAR2 -ge $VAR1 ]] && [[ $VAR2 -ge $VAR3 ]]
then
  echo "$VAR2 is the largest number."
else
  echo "$VAR3 is the largest number."
fi
#+end_src

** Test Operators
- -n VAR - True if the length of VAR is greater than zero.
- -z VAR - True if the VAR is empty.
- STRING1 = STRING2 - True if STRING1 and STRING2 are equal.
- STRING1 != STRING2 - True if STRING1 and STRING2 are not equal.
- INTEGER1 -eq INTEGER2 - True if INTEGER1 and INTEGER2 are equal.
- INTEGER1 -gt INTEGER2 - True if INTEGER1 is greater than INTEGER2.
- INTEGER1 -lt INTEGER2 - True if INTEGER1 is less than INTEGER2.
- INTEGER1 -ge INTEGER2 - True if INTEGER1 is equal or greater than INTEGER2.
- INTEGER1 -le INTEGER2 - True if INTEGER1 is equal or less than INTEGER2.
